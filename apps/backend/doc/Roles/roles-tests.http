### VENDIX - Roles API Tests
### Archivo para probar todos los endpoints del servicio de roles

@baseUrl = http://localhost:3000/api
@access_token = TU_TOKEN_AQUI
@super_admin_token = TU_TOKEN_SUPER_ADMIN_AQUI
@user_token_sin_permisos = TU_TOKEN_USUARIO_SIN_PERMISOS_AQUI

### ============================================
### 0. HEALTH CHECK - Verificar servidor
### ============================================
GET {{baseUrl}}/health

### ============================================
### 1. LOGIN PARA OBTENER TOKENS
### ============================================

### Login como Super Admin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "superadmin@vendix.com",
  "password": "password123",
  "organizationSlug": "vendix-corp"
}

### Login como Admin Regular
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "testadmin@vendix.com",
  "password": "password123",
  "organizationSlug": "vendix-corp"
}

### ============================================
### 2. GESTIÓN DE ROLES - CRUD
### ============================================

### 2.1 LISTAR ROLES - Como Super Admin (ve todos los roles)
GET {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}

### 2.2 LISTAR ROLES - Como Admin Regular (no ve super_admin)
GET {{baseUrl}}/roles
Authorization: Bearer {{access_token}}

### 2.3 CREAR ROL PERSONALIZADO - ÉXITO
POST {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "name": "store_auditor",
  "description": "Auditor especializado para tienda",
  "is_system_role": false
}

### 2.4 CREAR ROL - ERROR: Nombre duplicado
POST {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "name": "store_auditor",
  "description": "Intento de duplicado",
  "is_system_role": false
}

### 2.5 OBTENER ROL ESPECÍFICO - ÉXITO
GET {{baseUrl}}/roles/1
Authorization: Bearer {{super_admin_token}}

### 2.6 OBTENER SUPER ADMIN - Como Admin Regular (ERROR 404)
GET {{baseUrl}}/roles/1
Authorization: Bearer {{access_token}}

### 2.7 ACTUALIZAR ROL - ÉXITO
PATCH {{baseUrl}}/roles/10
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "description": "Auditor especializado actualizado"
}

### 2.8 ELIMINAR ROL - ERROR: Rol del sistema
DELETE {{baseUrl}}/roles/2
Authorization: Bearer {{super_admin_token}}

### 2.9 ELIMINAR ROL PERSONALIZADO - ÉXITO
DELETE {{baseUrl}}/roles/10
Authorization: Bearer {{super_admin_token}}

### ============================================
### 3. GESTIÓN DE PERMISOS
### ============================================

### 3.1 ASIGNAR PERMISOS A ROL - ÉXITO
POST {{baseUrl}}/roles/3/permissions
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "permissionIds": [1, 2, 3]
}

### 3.2 ASIGNAR PERMISOS - ERROR: Permiso inexistente
POST {{baseUrl}}/roles/3/permissions
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "permissionIds": [1, 2, 999]
}

### 3.3 REMOVER PERMISOS DE ROL - ÉXITO
DELETE {{baseUrl}}/roles/3/permissions
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "permissionIds": [2, 3]
}

### ============================================
### 4. ASIGNACIÓN DE ROLES A USUARIOS
### ============================================

### 4.1 ASIGNAR ROL NORMAL - ÉXITO
POST {{baseUrl}}/roles/assign-to-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 13,
  "roleId": 3
}

### 4.2 ASIGNAR ROL - ERROR: Usuario ya tiene el rol
POST {{baseUrl}}/roles/assign-to-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 13,
  "roleId": 3
}

### 4.3 ASIGNAR SUPER ADMIN - ERROR: Solo Super Admin puede asignar
POST {{baseUrl}}/roles/assign-to-user
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "userId": 14,
  "roleId": 1
}

### 4.4 ASIGNAR SUPER ADMIN - ERROR: Ya existe Super Admin
POST {{baseUrl}}/roles/assign-to-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 14,
  "roleId": 1
}

### 4.5 REMOVER ROL DE USUARIO - ÉXITO
POST {{baseUrl}}/roles/remove-from-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 13,
  "roleId": 3
}

### ============================================
### 5. CONSULTAS DE USUARIO
### ============================================

### 5.1 OBTENER ROLES DE USUARIO - ÉXITO
GET {{baseUrl}}/roles/user/13/roles
Authorization: Bearer {{super_admin_token}}

### 5.2 OBTENER PERMISOS DE USUARIO - ÉXITO
GET {{baseUrl}}/roles/user/13/permissions
Authorization: Bearer {{super_admin_token}}

### ============================================
### 6. PRUEBAS DE SEGURIDAD
### ============================================

### 6.1 ACCESO SIN AUTENTICACIÓN - ERROR 401
GET {{baseUrl}}/roles

### 6.2 ACCESO CON TOKEN INVÁLIDO - ERROR 401
GET {{baseUrl}}/roles
Authorization: Bearer token_invalido

### 6.3 ACCESO SIN PERMISOS - ERROR 403
GET {{baseUrl}}/roles
Authorization: Bearer {{user_token_sin_permisos}}

### ============================================
### 7. PRUEBAS DE ERROR HANDLING
### ============================================

### 7.1 ROL INEXISTENTE - ERROR 404
GET {{baseUrl}}/roles/999
Authorization: Bearer {{super_admin_token}}

### 7.2 USUARIO INEXISTENTE - ERROR 404
POST {{baseUrl}}/roles/assign-to-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 999,
  "roleId": 3
}

### 7.3 DATOS INVÁLIDOS - ERROR 400
POST {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "name": "",
  "description": "Rol sin nombre"
}

### ============================================
### 8. PRUEBAS DE LÍMITE
### ============================================

### 8.1 ASIGNAR MÚLTIPLES PERMISOS - ÉXITO
POST {{baseUrl}}/roles/4/permissions
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "permissionIds": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
}

### 8.2 REMOVER MÚLTIPLES PERMISOS - ÉXITO
DELETE {{baseUrl}}/roles/4/permissions
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "permissionIds": [1, 2, 3, 4, 5]
}

### ============================================
### 9. PRUEBAS DE REGRESIÓN
### ============================================

### 9.1 VERIFICAR INTEGRIDAD DESPUÉS DE OPERACIONES
GET {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}

### 9.2 VERIFICAR ASIGNACIONES DE USUARIO
GET {{baseUrl}}/roles/user/1/roles
Authorization: Bearer {{super_admin_token}}

### ============================================
### 10. PRUEBAS DE PERFORMANCE
### ============================================

### 10.1 MÚLTIPLES CONSULTAS CONCURRENTES
GET {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}

###
GET {{baseUrl}}/roles/1
Authorization: Bearer {{super_admin_token}}

###
GET {{baseUrl}}/roles/user/1/roles
Authorization: Bearer {{super_admin_token}}

### ============================================
### VARIABLES PARA TESTING AVANZADO
### ============================================

@new_role_id = 0
@new_user_id = 15
@test_role_name = test_role_{{$randomInt 100 999}}
@test_user_email = testuser{{$randomInt 100 999}}@example.com

### 11. PRUEBAS CON DATOS DINÁMICOS
### ============================================

### Crear rol con nombre aleatorio
POST {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "name": "{{test_role_name}}",
  "description": "Rol de prueba generado dinámicamente",
  "is_system_role": false
}

### Asignar rol a usuario existente
POST {{baseUrl}}/roles/assign-to-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 13,
  "roleId": {{new_role_id}}
}

### ============================================
### 12. PRUEBAS DE STRESS
### ============================================

### Múltiples asignaciones rápidas (ejecutar varias veces)
POST {{baseUrl}}/roles/assign-to-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 13,
  "roleId": 4
}

###
POST {{baseUrl}}/roles/remove-from-user
Authorization: Bearer {{super_admin_token}}
Content-Type: application/json

{
  "userId": 13,
  "roleId": 4
}

### ============================================
### 13. LIMPIEZA DE DATOS DE PRUEBA
### ============================================

### Remover rol de prueba
DELETE {{baseUrl}}/roles/{{new_role_id}}
Authorization: Bearer {{super_admin_token}}

### ============================================
### 14. REPORTES Y VERIFICACIONES FINALES
### ============================================

### Verificar estado final de roles
GET {{baseUrl}}/roles
Authorization: Bearer {{super_admin_token}}

### Verificar auditoría de operaciones
GET {{baseUrl}}/audit?resource=ROLES&limit=10
Authorization: Bearer {{super_admin_token}}

### Verificar estado de usuarios
GET {{baseUrl}}/users?limit=5
Authorization: Bearer {{super_admin_token}}
